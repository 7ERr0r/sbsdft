
# [workspace]
# resolver = "2"

[package]
name = "dft"
version = "0.1.1"
authors = ["error"]
edition = "2021"
resolver = "2"

#[lib]
#crate-type = ["cdylib"]
[lib]
crate-type = ["cdylib", "rlib"]
path = "src/library.rs"


[[bin]]
name = "sbsdft"
path = "src/standalone.rs"


[profile.release]
#lto = true
opt-level = 3
debug = true

[profile.dev]
opt-level = 3



[dependencies]
wee_alloc = "0.4.5"
bytes = "1.1.0"
byteorder = "1.4.3"
futures = "0.3.21"
png = "0.17.5"
nalgebra-glm = "0.17.0"
derive_more = "0.99.17"
byteio = "0.2.3"
serde = "1.0.137"
serde_json = "1.0.81"
serde_derive = "1.0.137"
cfg-if = "1.0.0"
field-offset = "0.3.4"
hound = "3.4.0"
anyhow = "1.0.57"
crossbeam-channel = "*"
integer-sqrt = "*"


rayon = "1.5.3"
tokio = { version = "1.18.2", features = [] }
parking_lot = "0.12.0"
lazy_static = "1.4.0"

cgmath = "0.18.0"
bytemuck = { version = "1.9.1", features = ["derive"] }
rand = "0.8.5"
log = "0.4.17"
env_logger = "0.9.0"
#winit = { version = "0.27", features = [] }
num = "0.4.0"
num_enum = "0.5.7"
async-executor = "1.4.1"
pollster = "0.2.5"
console_error_panic_hook = "0.1.7"
clap = { version = "4.0.19", features = ["derive"] }



[dependencies.wgpu]
package = "wgpu"
version = "0.14.0"
# path = "../wgpu-rs"
# git = "https://github.com/gfx-rs/wgpu-rs"
# rev = "1ff884aca192f134fcd6145185ca9ade8e3f881c"
features = ["webgl"]


#pprof = "*"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
winit = { version = "0.27", features = [] }
cpal = "0.14"


[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { version = "0.2.6", features = ["js"] }
wasm-bindgen = "0.2.80"
wasm-bindgen-futures = "0.4.30"

#cpal = "*"


# [target.'cfg(not(target_env = "msvc"))'.dependencies]
# jemallocator = "*"

#[target.'cfg(all(unix, not(target_os = "ios"), not(target_os = "macos")))'.dependencies]
#gfx-backend-vulkan = { version = "0.9.0", features = ["x11"] }


[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies.subscriber]
package = "wgpu-subscriber"
version = "0.1.0"



[features]
default = []
# Make Vulkan backend available on platforms where it is by default not, e.g. macOS
#vulkan = ["wgc/gfx-backend-vulkan"]
rawwebgl = []


[target.'cfg(not(target_arch = "wasm32"))'.dependencies.wgc]
package = "wgpu-core"
version = "0.14"
# git = "https://github.com/gfx-rs/wgpu"
# rev = "e5ddb94be0221b0f53a8f43adfb15458daebfd7c"
features = ["raw-window-handle"]


[target.'cfg(target_arch = "wasm32")'.dependencies.wgc]
package = "wgpu-core"
# git = "https://github.com/gfx-rs/wgpu"
# rev = "e5ddb94be0221b0f53a8f43adfb15458daebfd7c"
features = ["raw-window-handle"]
version = "0.14"
#optional = true


# [target.'cfg(not(target_arch = "wasm32"))'.dependencies.wgpu]
# package = "wgpu"
# version = "0.7"
# git = "https://github.com/gfx-rs/wgpu-rs"


[dependencies.wgt]
package = "wgpu-types"
version = "0.8"
git = "https://github.com/gfx-rs/wgpu"
rev = "e5ddb94be0221b0f53a8f43adfb15458daebfd7c"




[target.'cfg(target_arch="wasm32")'.dependencies]
wee_alloc = "0.4.5"
wasm-bindgen-rayon = "1.0.3"
spmc = "0.3.0"
console_log = "0.2.0"
#dlmalloc = { version = "*", features = ["global"] }
wasm-tracing-allocator = "0.1.1"
wasm-bindgen = "0.2.80"
web-sys = { version = "0.3.60", features = [
    "MediaStreamTrack",
    "AudioProcessingEvent",
    "MediaStream",
    "MediaDevices",
    "MediaStreamAudioSourceNode",
    "MediaStreamAudioDestinationNode",
    "ScriptProcessorNode",
    "MediaStreamConstraints",
    "MediaTrackConstraints",
    "BlobPropertyBag",
    "Blob",
    "DedicatedWorkerGlobalScope",
    "Url",
    "AudioWorklet",
    "WorkletOptions",
    "RequestCredentials",
    "Worklet",
    "MessageEvent",
    "WorkerOptions",
    "WorkerLocation",
    "ErrorEvent",
    "Document",
    "Navigator",
    "Node",
    "NodeList",
    "Gpu",
    "GpuAdapter",
    #"GpuAdapterFeatures",
    #"GpuAdapterLimits",
    "GpuAddressMode",
    "GpuBindGroup",
    "GpuBindGroupDescriptor",
    "GpuBindGroupEntry",
    "GpuBindGroupLayout",
    "GpuBindGroupLayoutDescriptor",
    "GpuBindGroupLayoutEntry",
    "GpuBlendComponent",
    "GpuBlendFactor",
    "GpuBlendOperation",
    "GpuBlendState",
    "GpuBuffer",
    "GpuBufferBinding",
    "GpuBufferBindingLayout",
    "GpuBufferBindingType",
    "GpuBufferDescriptor",
    "GpuCanvasContext",
    "GpuColorDict",
    "GpuColorTargetState",
    "GpuCommandBuffer",
    "GpuCommandBufferDescriptor",
    "GpuCommandEncoder",
    "GpuCommandEncoderDescriptor",
    "GpuCompareFunction",
    "GpuCompilationInfo",
    "GpuCompilationMessage",
    "GpuCompilationMessageType",
    "GpuComputePassDescriptor",
    "GpuComputePassEncoder",
    "GpuComputePipeline",
    "GpuComputePipelineDescriptor",
    "GpuCullMode",
    "GpuDepthStencilState",
    "GpuDevice",
    "GpuDeviceDescriptor",
    "GpuDeviceLostInfo",
    "GpuDeviceLostReason",
    "GpuErrorFilter",
    "GpuExtent3dDict",
    "GpuFeatureName",
    "GpuFilterMode",
    "GpuFragmentState",
    "GpuFrontFace",
    "GpuImageCopyBuffer",
    #"GpuImageCopyImageBitmap",
    "GpuImageCopyTexture",
    "GpuImageDataLayout",
    "GpuIndexFormat",
    #"GpuInputStepMode",
    "GpuLoadOp",
    "GpuMultisampleState",
    "GpuObjectDescriptorBase",
    "GpuOrigin2dDict",
    "GpuOrigin3dDict",
    "GpuOutOfMemoryError",
    "GpuPipelineDescriptorBase",
    "GpuPipelineLayout",
    "GpuPipelineLayoutDescriptor",
    "GpuPowerPreference",
    "GpuPrimitiveState",
    "GpuPrimitiveTopology",
    "GpuProgrammableStage",
    "GpuQuerySet",
    "GpuQuerySetDescriptor",
    "GpuQueryType",
    "GpuQueue",
    "GpuRenderBundle",
    "GpuRenderBundleDescriptor",
    "GpuRenderBundleEncoder",
    "GpuRenderBundleEncoderDescriptor",
    "GpuRenderPassColorAttachment",
    "GpuRenderPassDepthStencilAttachment",
    "GpuRenderPassDescriptor",
    "GpuRenderPassEncoder",
    "GpuRenderPipeline",
    "GpuRenderPipelineDescriptor",
    "GpuRequestAdapterOptions",
    "GpuSampler",
    "GpuSamplerBindingLayout",
    "GpuSamplerBindingType",
    "GpuSamplerDescriptor",
    "GpuShaderModule",
    "GpuShaderModuleDescriptor",
    "GpuStencilFaceState",
    "GpuStencilOperation",
    "GpuStorageTextureAccess",
    "GpuStorageTextureBindingLayout",
    "GpuStoreOp",
    #"GpuSwapChain",
    #"GpuSwapChainDescriptor",
    "GpuTexture",
    "GpuTextureAspect",
    "GpuTextureBindingLayout",
    "GpuTextureDescriptor",
    "GpuTextureDimension",
    "GpuTextureFormat",
    "GpuTextureSampleType",
    "GpuTextureView",
    "GpuTextureViewDescriptor",
    "GpuTextureViewDimension",
    "GpuUncapturedErrorEvent",
    "GpuUncapturedErrorEventInit",
    "GpuValidationError",
    "GpuVertexAttribute",
    "GpuVertexBufferLayout",
    "GpuVertexFormat",
    "GpuVertexState",
    "HtmlCanvasElement",
    "Window",
    "Location",
] }
js-sys = "0.3.60"
wasm-bindgen-futures = "0.4.30"

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
console_error_panic_hook = "0.1.7"
console_log = "0.2.0"
